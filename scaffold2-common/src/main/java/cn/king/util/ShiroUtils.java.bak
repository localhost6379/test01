package cn.king.util;


import org.apache.shiro.SecurityUtils;
import org.apache.shiro.crypto.SecureRandomNumberGenerator;
import org.apache.shiro.crypto.hash.SimpleHash;
import org.apache.shiro.util.ByteSource;

/**
 * @author: wjl@king.cn
 * @time: 2020/2/19 18:33
 * @version: 1.0.0
 * @description:
 */
public class ShiroUtils {

    // 加密使用的散列算法
    public static final String HASH_ALGORITHMNAME_MD5 = "MD5";
    // 加密次数
    public static final Integer HASH_ITERATIONS_1024 = 1024;

    private ShiroUtils() {
    }

    /**
     * @author: wjl@king.cn
     * @createTime: 2020/2/20 8:41
     * @param: len
     * @return: java.lang.String
     * @description: 生成len位随机字符串作为盐.
     * 使用SpringUtils也行.
     */
    public static String generateSalt(int len) {
        // 一个byte占2个字节
        int byteLen = len >> 1;
        SecureRandomNumberGenerator randomNumberGenerator = new SecureRandomNumberGenerator();
        return randomNumberGenerator.nextBytes(byteLen).toHex();
    }


    /**
     * @author: wjl@king.cn
     * @createTime: 2020/2/19 18:35
     * @param: hashAlgorithmName 散列算法
     * @param: password 原始密码
     * @param: salt 盐
     * @param: hashIterations 加密次数
     * @return: java.lang.String
     * @description: 密码加密
     */
    public static String encryptPassword(String hashAlgorithmName, String password, String salt, int hashIterations) {
        SimpleHash simpleHash = new SimpleHash(hashAlgorithmName, password, ByteSource.Util.bytes(salt), hashIterations);
        return simpleHash.toString();
    }

    /**
     * @author: wjl@king.cn
     * @createTime: 2020/2/19 19:07
     * @param:
     * @return: cn.king.model.pojo.SysUser
     * @description: 获取当前登录的用户
     */
    public static Object getSubject() {
        // 获取的就是UserRealm.doGetAuthenticationInfo()方法返回值的第一个参数
        return SecurityUtils.getSubject().getPrincipal();
    }

}
